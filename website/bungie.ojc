###
bungie.ojc: Bungie mini-game
###

modules = require './modules/all.ojc'

module.exports = (data) ->

  doctype 5

  html ->
    head ->
      title 'Bungie'

      script src:'modules/all.js', type:'text/javascript'
      script src:'scripts/jquery-ui.min.js', type:'text/javascript'
      link href:'scripts/jquery-ui.min.css', rel:'stylesheet', type:'text/css'
      script src:'scripts/jquery.backstretch.min.js', type:'text/javascript'
      script src:'scripts/jquery-ui.touch-punch.min.js', type:'text/javascript'

    body ->
      div c:'choices'
      div c:'easy'
      div c:'accept'
      div c:'sphere', _div c:'glow'
      div c:'logo', _div c:'glow'
      div c:'sphere_snap'
      div c:'logo_snap'

      onload ->

        # Prevent scrolling in ios
        document.ontouchstart = (e) ->
          e.preventDefault()
        document.ontouchmove = (e) ->
          e.preventDefault()

        fadeSpeed = 500
        glowSpeed = 800
        glowOpacity = 0.9
        snapTolerance = 20
        $.backstretch 'media/destiny_bg.jpg', speed:1, centeredY: false

        imageNames = ['choices', 'easy', 'sphere', 'logo', 'accept', 'logo_snap', 'sphere_snap']

        imageInfo =
          bg:
            size:
              width:1440
              height:900
          choices:
            size:
              width:396
              height:75
            position:
              x: 0.5
              y: 0.07087102760380422
          easy:
            size:
              width:543
              height:32
            position:
              x: 0.5
              y: 0.8344404078459514
          accept:
            size:
              width:556
              height:59
            position:
              x: 0.5
              y: 0.5080915111828729
          sphere:
            size:
              width:276
              height:276
            position:
              x: 0.4999945633263744
              y: 0.6444589422407794
          sphere_snap:
            size:
              width:276
              height:276
            position:
              x: 0.49760708258884256
              y: 0.28327675203494146
          logo:
            size:
              width:135
              height:124
            position:
              x: 0.6244580492764024
              y: 0.5107541711517761

          logo_snap:
            size:
              width:135
              height:124
            position:
              x: 0.49937752299649263
              y: 0.6517821454569519

        stopGlow = false

        # Glow when triggered
        bindFadeCycle = (name) ->
          $('.' + name + ' > .glow').bind 'fade-cycle', ->
            $(@).fadeTo glowSpeed, glowOpacity, ->
              $(@).fadeOut glowSpeed, ->
                if not transitions[name]
                  $(@).trigger 'fade-cycle'

        bindFadeCycle 'sphere'
        bindFadeCycle 'logo'

        $('.glow').each (index, elem) ->
          setTimeout (-> $(elem).trigger('fade-cycle')), index * 700

        bodySize = ->
          size =
            width: $('.backstretch').width()
            height: $('.backstretch').height()

        bgRatio = ->
          currentWidth = $('body').data('backstretch').$img.width()
          originalWidth = imageInfo.bg.size.width
          currentWidth / originalWidth

        scaledSizeOfImage = (name) ->
          ratio = bgRatio()
          size =
            width: ratio * imageInfo[name].size.width
            height: ratio * imageInfo[name].size.height

        # Calculate top, left position in body coordinates from world coordinates
        # World is represented as 0-1 centered in middle
        # Body is represented in pixels from top/left
        bodyPositionFromWorldPosition = (worldPosition, scaledSize) ->
          cameraSize = bodySize()
          aspectRatio = imageInfo.bg.size.width / imageInfo.bg.size.height
          cameraRatio = cameraSize.width / cameraSize.height
          if aspectRatio >= cameraRatio  # Width is cropped
            #              (The width without crop)        - (the width after crop)
            widthMissing = cameraSize.height * aspectRatio - cameraSize.width
            aspectSize =
              width:  cameraSize.width + widthMissing
              height: cameraSize.height
            bodyPosition =
              left: worldPosition.x * aspectSize.width - widthMissing/2 - scaledSize.width/2.0
              top: worldPosition.y * aspectSize.height - scaledSize.height/2.0

          else # Height is cropped
            #              (The height without crop)       - (the height after crop)
            heightMissing = cameraSize.width / aspectRatio - cameraSize.height
            aspectSize =
              width:  cameraSize.width
              height: cameraSize.height + heightMissing
            bodyPosition =
              left: worldPosition.x * aspectSize.width - scaledSize.width/2.0
              top: worldPosition.y * aspectSize.height - scaledSize.height/2.0

        worldPositionFromBodyPosition = (bodyPosition, scaledSize) ->
          cameraSize = bodySize()

          aspectRatio = imageInfo.bg.size.width / imageInfo.bg.size.height
          cameraRatio = cameraSize.width / cameraSize.height
          if aspectRatio >= cameraRatio  # Width is cropped
            widthMissing = cameraSize.height * aspectRatio - cameraSize.width
            aspectSize =
              width:  cameraSize.width + widthMissing
              height: cameraSize.height
            worldPosition =
              x: (bodyPosition.left + widthMissing / 2 + scaledSize.width / 2) / aspectSize.width
              y: (bodyPosition.top + scaledSize.height / 2) / aspectSize.height

          else # Height is cropped
            heightMissing = cameraSize.width / aspectRatio - cameraSize.height
            aspectSize =
              width:  cameraSize.width
              height: cameraSize.height + heightMissing
            worldPosition =
              x: (bodyPosition.left + scaledSize.width / 2) / aspectSize.width
              y: (bodyPosition.top + scaledSize.height / 2) / aspectSize.height

        transitions =
          logo: false
          sphere: false

        delay = (time, cb) ->
          setTimeout(cb,time)

        # Start transition
        $('.choices').hide()
        delay fadeSpeed, ->
          $('.choices').fadeIn(fadeSpeed)
        $('.easy').hide()
        $('.accept').hide()

        transitionSphere = ->
          transitions.sphere = true
          $('.sphere').draggable("destroy")
          $('.sphere').css('cursor','default')

          $('.choices').fadeOut fadeSpeed, ->
            delay fadeSpeed/2, ->
              $('.easy').fadeIn fadeSpeed

        transitionLogo = ->
          transitions.logo = true
          stopGlow = true
          $('.logo').draggable("destroy")
          $('.logo').css('cursor','default')
          $('.easy').fadeOut fadeSpeed, ->
            delay fadeSpeed/2, ->
              $('.accept').fadeIn fadeSpeed

        imageSizeChanged = (e, instance) ->
          for name in imageNames
            $name = $('.' + name)

            # Set width and height
            newSize = scaledSizeOfImage name
            $name.width(newSize.width + 'px')
            $name.height(newSize.height + 'px')

            # Set position
            newPosition = bodyPositionFromWorldPosition(imageInfo[name].position, newSize)
            $name.css(newPosition)

        $(window).resize (e) ->
          imageSizeChanged(e, $('body').data('backstretch'))

        $(window).on "backstretch.after", (e, instance, index) ->
          imageSizeChanged(e, instance)

        updateImagePosition = (name, bodyPosition) ->
          worldPosition = worldPositionFromBodyPosition bodyPosition, (scaledSizeOfImage name)
          console.log "worldPosition: ", worldPosition
          imageInfo[name].position = worldPosition

        dragTargetInTolerance = (pos, posTarget, tolerance = 5) ->
          Math.abs(pos.left - posTarget.left) < tolerance and Math.abs(pos.top - posTarget.top) < tolerance

        $( ".sphere" ).draggable
          containment: ".backstretch"
          snap:'.sphere_snap'
          scroll: false
          snapTolerance: snapTolerance
          stop: ->
            if dragTargetInTolerance $('.sphere').position(), $('.sphere_snap').position()
              transitionSphere()
          drag: ->
            updateImagePosition 'sphere', $('.sphere').position()

        $( ".logo" ).draggable
          containment: ".backstretch"
          snap:'.logo_snap'
          scroll: false
          snapTolerance: snapTolerance
          stop: ->
            if dragTargetInTolerance $('.logo').position(), $('.logo_snap').position()
              if transitions.sphere
                transitionLogo()
          drag: ->
            updateImagePosition 'logo', $('.logo').position()

        window.backgroundSize = ->
          console.log($('body').data('backstretch'))

      css
        'body':
          backgroundColor:'#000308'
          overflow: 'hidden'

        '.choices':
          background:"url('media/destiny_choices.png') no-repeat center center"
          backgroundSize: 'cover'
          position: 'absolute'
          zIndex:100

        '.easy':
          background:"url('media/destiny_easy.png') no-repeat center center"
          backgroundSize: 'cover'
          position: 'absolute'
          zIndex:101

        '.accept':
          background:"url('media/destiny_accept.png') no-repeat center center"
          backgroundSize: 'cover'
          position: 'absolute'
          zIndex:102

        '.sphere':
          background:"url('media/destiny_sphere.png') no-repeat center center"
          backgroundSize: 'cover'
          position: 'absolute'
          cursor: 'move'
          zIndex:200
          '& > .glow':
            background:"url('media/destiny_sphere_glow.png') no-repeat center center"
            backgroundSize: 'cover'
            width: '100%'
            height: '100%'
            position: 'relative'
            display: 'none'

        '.logo':
          background:"url('media/destiny_logo.png') no-repeat center center"
          backgroundSize: 'cover'
          cursor: 'move'
          position: 'absolute'
          zIndex:190
          '& > .glow':
            background:"url('media/destiny_logo_glow.png') no-repeat center center"
            backgroundSize: 'cover'
            width: '100%'
            height: '100%'
            position: 'relative'
            display: 'none'

        '.sphere_snap':
          position: 'absolute'
          zIndex:100

        '.logo_snap':
          position: 'absolute'
          zIndex:100
